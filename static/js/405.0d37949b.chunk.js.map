{"version":3,"file":"static/js/405.0d37949b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-confirm-alert/lib/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #0341fa;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 19px;\n`;\n\nexport const Input = styled.input`\n  margin: 8px 0;\n  width: 210px;\n  height: 30px;\n  border: none;\n  border-radius: 6px;\n  outline: none;\n  font-size: 16px;\n  padding: 2px 8px;\n  box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 34%);\n`;\n\nexport const Button = styled.button`\n  display: block;\n  background-color: #f6e764;\n  color: #0341fa;\n  border: none;\n  width: 142px;\n  height: 38px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 6px;\n  cursor: pointer;\n  box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 20%);\n  :hover {\n    background-color: #2196F3;\n    box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 50%);\n  }\n`;\n\nexport const PhoneBookWrapper = styled.div`\n  width: 500px;\n  padding: 10px;\n  margin: 0 auto;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      return toast.warn(`${name} is already in contacts.`, {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n    }\n\n    dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>Add Contact</h2>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter your name\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter your phone number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactWriper = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  list-style: none;\n  width: 500px;\n  padding: 12px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: 500;\n  font-size: 17px;\n  width: 500px;\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #0341fa;\n  margin-bottom: 5px;\n  margin-left: -10px;\n`;\n\nexport const ContactButton = styled.button`\n  display: block;\n  background-color: #f6e764;\n  color: #0341fa;\n  border: none;\n  width: 130px;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 8px;\n  cursor: pointer;\n  box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 20%);\n  :hover {\n    background-color: #2196F3;\n    box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 50%);\n  }\n`;\n\nexport const ContactInfo = styled.p`\n  width: 500px;\n  color: #f6e764;\n`;\n\nexport const ModalWrapper = styled.div`\n  background-color: #0341fa;\n  text-align: center;\n  padding: 16px;\n  border-radius: 6px;\n  color: #fff;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 26px;\n`;\n\nexport const ModalButton = styled.button`\n  display: block;\n  background-color: #f6e764;\n  color: black;\n  border: none;\n  width: 100px;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 8px;\n  cursor: pointer;\n  :hover {\n    background-color: #038bfa;\n    box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 50%);\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  margin-top: 0;\n  color: #f6e764;\n`;\n\nexport const ModalText = styled.p`\n  color: #f6e764;\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  ContactWriper,\n  ContactItem,\n  ContactInfo,  \n  ContactButton,\n  ButtonWrapper,\n  ModalWrapper,\n  ModalButton,\n  ModalTitle,\n  ModalText,\n} from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {  toast } from 'react-toastify';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter.filter);\n\n  const submit = id => {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <ModalWrapper className=\"custom-ui\">\n            <ModalTitle>Are you sure?</ModalTitle>\n            <ModalText>You want to delete this contact?</ModalText>\n            <ButtonWrapper>\n              <ModalButton onClick={onClose}>No</ModalButton>\n              <ModalButton\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                  toast.success('Success! The contact has been deleted', {\n                    position: 'top-left',\n                    autoClose: 1000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: 'light',\n                  });\n                  onClose();\n                }}\n              >\n                Yes!\n              </ModalButton>\n            </ButtonWrapper>\n          </ModalWrapper>\n        );\n      },\n    });\n  };\n\n  const handleDeleteContact = id => {\n    submit(id);\n  };\n\n  const normalizeFilter = filter.toLocaleLowerCase();\n\n  const filterContacts = contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(normalizeFilter);\n  });\n\n  return (\n    <ContactWriper>\n      {filterContacts.map(contact => {\n        return (\n          <ContactItem key={nanoid()}>\n            <ContactInfo>\n              {contact.name}: {contact.number}\n            </ContactInfo>\n            <ContactButton\n              type=\"button\"\n              onClick={() => {\n                handleDeleteContact(contact.id);\n              }}\n            >\n              Delete\n            </ContactButton>\n          </ContactItem>\n        );\n      })}\n    </ContactWriper>\n  );\n};\n\nexport default ContactList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  margin-bottom: 5px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: inline-flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 18px;\n  `;\n\nexport const FilterInput = styled.input`\n  margin: 8px 0;\n  width: 220px;\n  height: 30px;\n  border: none;\n  border-radius: 6px;\n  outline: none;\n  font-size: 16px;\n  padding: 2px 8px;\n  box-shadow: 0px 0px 12px -2px rgb(0 0 0 / 34%);\n`;\n","import { FilterWrapper, FilterLabel, FilterInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filter.filter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput type=\"text\" value={filter} onChange={changeFilter} />\n      </FilterLabel>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;","import ContactForm  from 'components/ContactForm/ContactForm';\nimport { PhoneBookWrapper } from 'components/ContactForm/ContactForm.styled';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <PhoneBookWrapper>\n      <div>\n        <ContactForm />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n\n        <Filter />\n        <ContactList />\n      </div>\n    </PhoneBookWrapper>\n  );\n};\n\nexport default Contacts;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _client = require('react-dom/client');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n\n      e.stopPropagation();\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm(_this.props);\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboard = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape,\n          onkeyPress = _this$props2.onkeyPress,\n          keyCodeForClose = _this$props2.keyCodeForClose;\n\n      var keyCode = event.keyCode;\n      var isKeyCodeEscape = keyCode === 27;\n\n      if (keyCodeForClose.includes(keyCode)) {\n        _this.close();\n      }\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n\n      if (onkeyPress) {\n        onkeyPress();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboard, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboard, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  _extends({\n                    key: i,\n                    className: button.className\n                  }, button, {\n                    onClick: function onClick(e) {\n                      return _this2.handleClickButton(button);\n                    }\n                  }),\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  keyCodeForClose: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  onkeyPress: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  keyCodeForClose: [],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nvar root = null;\nvar targetId = 'react-confirm-alert';\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById(properties.targetId || targetId);\n\n  if (properties.targetId && !divTarget) {\n    console.error('React Confirm Alert:', 'Can not get element id (#' + properties.targetId + ')');\n  }\n\n  if (divTarget) {\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  } else {\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = targetId;\n    document.body.appendChild(divTarget);\n    root = (0, _client.createRoot)(divTarget);\n    root.render(_react2.default.createElement(ReactConfirmAlert, properties));\n  }\n}\n\nfunction removeElementReconfirm(properties) {\n  var target = document.getElementById(properties.targetId || targetId);\n  if (target) {\n    root.unmount(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}"],"names":["Form","styled","Label","Input","Button","PhoneBookWrapper","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","handleChange","e","currentTarget","value","reset","onSubmit","evt","preventDefault","find","contact","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","type","placeholder","onChange","pattern","title","required","ContactWriper","ContactItem","ContactButton","ContactInfo","ModalWrapper","ButtonWrapper","ModalButton","ModalTitle","ModalText","filter","handleDeleteContact","id","confirmAlert","customUI","onClose","className","onClick","deleteContact","submit","normalizeFilter","toLocaleLowerCase","filterContacts","includes","map","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","FilterWrapper","FilterLabel","FilterInput","setFilter","useEffect","fetchContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_class","_temp2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","targetId","console","error","children","createElement","root","_client","createRoot","render","_react2","default","ReactConfirmAlert","createElementReconfirm","_react","_interopRequireDefault","_propTypes2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_Component","_ref","_temp","_this","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClickButton","button","close","handleClickOverlay","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","stopPropagation","afterClose","removeBodyClass","removeElementReconfirm","removeSVGBlurReconfirm","keyboard","event","_this$props2","closeOnEscape","onKeypressEscape","onkeyPress","keyCodeForClose","keyCode","isKeyCodeEscape","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","message","buttons","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","ref","dom","label","Component","propTypes","defaultProps","svg","parentNode","removeChild","remove","unmount"],"sourceRoot":""}